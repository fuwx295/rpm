From c7e711bba58374f03347c795a567441cbef3de58 Mon Sep 17 00:00:00 2001
Message-Id: <c7e711bba58374f03347c795a567441cbef3de58.1574338784.git.pmatilai@redhat.com>
In-Reply-To: <871065ddd493c76d80345d2e80b38b9ce4c7acdd.1574338784.git.pmatilai@redhat.com>
References: <871065ddd493c76d80345d2e80b38b9ce4c7acdd.1574338784.git.pmatilai@redhat.com>
From: Igor Gnatenko <i.gnatenko.brain@gmail.com>
Date: Sat, 10 Sep 2016 11:39:23 +0200
Subject: [PATCH 3/3] Add support for sorting caret ('^') higher than base
 version

1.1^20160101 means 1.1 version (base) and patches which were applied at
that date on top of it.

* 1.1^201601 > 1.1
* 1.1^201601 < 1.1.1

Having symmetry is also good.

Signed-off-by: Igor Gnatenko <i.gnatenko.brain@gmail.com>
---
 build/pack.c       |  4 ++++
 lib/rpmds.c        |  3 +++
 lib/rpmvercmp.c    | 19 +++++++++++++++++--
 tests/rpmvercmp.at | 26 ++++++++++++++++++++++++++
 4 files changed, 50 insertions(+), 2 deletions(-)

diff --git a/build/pack.c b/build/pack.c
index c94964be2..d7adcb0e2 100644
--- a/build/pack.c
+++ b/build/pack.c
@@ -354,6 +354,10 @@ static void finalizeDeps(Package pkg)
     if (haveCharInDep(pkg, '~'))
 	(void) rpmlibNeedsFeature(pkg, "TildeInVersions", "4.10.0-1");
 
+    /* check if the package has a dependency with a '^' */
+    if (haveCharInDep(pkg, '^'))
+	(void) rpmlibNeedsFeature(pkg, "CaretInVersions", "4.15.0-1");
+
     /* check if the package has a rich dependency */
     if (haveRichDep(pkg))
 	(void) rpmlibNeedsFeature(pkg, "RichDependencies", "4.12.0-1");
diff --git a/lib/rpmds.c b/lib/rpmds.c
index 01aa1022b..730a58c35 100644
--- a/lib/rpmds.c
+++ b/lib/rpmds.c
@@ -1240,6 +1240,9 @@ static const struct rpmlibProvides_s rpmlibProvides[] = {
     { "rpmlib(TildeInVersions)",    "4.10.0-1",
 	(		RPMSENSE_EQUAL),
     N_("dependency comparison supports versions with tilde.") },
+    { "rpmlib(CaretInVersions)",    "4.15.0-1",
+	(		RPMSENSE_EQUAL),
+    N_("dependency comparison supports versions with caret.") },
     { "rpmlib(LargeFiles)", 	"4.12.0-1",
 	(		RPMSENSE_EQUAL),
     N_("support files larger than 4GB") },
diff --git a/lib/rpmvercmp.c b/lib/rpmvercmp.c
index b3d08faa4..13857e151 100644
--- a/lib/rpmvercmp.c
+++ b/lib/rpmvercmp.c
@@ -33,8 +33,8 @@ int rpmvercmp(const char * a, const char * b)
 
     /* loop through each version segment of str1 and str2 and compare them */
     while (*one || *two) {
-	while (*one && !risalnum(*one) && *one != '~') one++;
-	while (*two && !risalnum(*two) && *two != '~') two++;
+	while (*one && !risalnum(*one) && *one != '~' && *one != '^') one++;
+	while (*two && !risalnum(*two) && *two != '~' && *two != '^') two++;
 
 	/* handle the tilde separator, it sorts before everything else */
 	if (*one == '~' || *two == '~') {
@@ -45,6 +45,21 @@ int rpmvercmp(const char * a, const char * b)
 	    continue;
 	}
 
+	/*
+	 * Handle caret separator. Concept is the same as tilde,
+	 * except that if one of the strings ends (base version),
+	 * the other is considered as higher version.
+	 */
+	if (*one == '^' || *two == '^') {
+	    if (!*one) return -1;
+	    if (!*two) return 1;
+	    if (*one != '^') return 1;
+	    if (*two != '^') return -1;
+	    one++;
+	    two++;
+	    continue;
+	}
+
 	/* If we ran to the end of either, we are finished with the loop */
 	if (!(*one && *two)) break;
 
diff --git a/tests/rpmvercmp.at b/tests/rpmvercmp.at
index 8b32209aa..1e7c960ea 100644
--- a/tests/rpmvercmp.at
+++ b/tests/rpmvercmp.at
@@ -102,6 +102,32 @@ RPMVERCMP(1.0~rc1~git123, 1.0~rc1~git123, 0)
 RPMVERCMP(1.0~rc1~git123, 1.0~rc1, -1)
 RPMVERCMP(1.0~rc1, 1.0~rc1~git123, 1)
 
+dnl Basic testcases for caret sorting
+RPMVERCMP(1.0^, 1.0^, 0)
+RPMVERCMP(1.0^, 1.0, 1)
+RPMVERCMP(1.0, 1.0^, -1)
+RPMVERCMP(1.0^git1, 1.0^git1, 0)
+RPMVERCMP(1.0^git1, 1.0, 1)
+RPMVERCMP(1.0, 1.0^git1, -1)
+RPMVERCMP(1.0^git1, 1.0^git2, -1)
+RPMVERCMP(1.0^git2, 1.0^git1, 1)
+RPMVERCMP(1.0^git1, 1.01, -1)
+RPMVERCMP(1.01, 1.0^git1, 1)
+RPMVERCMP(1.0^20160101, 1.0^20160101, 0)
+RPMVERCMP(1.0^20160101, 1.0.1, -1)
+RPMVERCMP(1.0.1, 1.0^20160101, 1)
+RPMVERCMP(1.0^20160101^git1, 1.0^20160101^git1, 0)
+RPMVERCMP(1.0^20160102, 1.0^20160101^git1, 1)
+RPMVERCMP(1.0^20160101^git1, 1.0^20160102, -1)
+
+dnl Basic testcases for tilde and caret sorting
+RPMVERCMP(1.0~rc1^git1, 1.0~rc1^git1, 0)
+RPMVERCMP(1.0~rc1^git1, 1.0~rc1, 1)
+RPMVERCMP(1.0~rc1, 1.0~rc1^git1, -1)
+RPMVERCMP(1.0^git1~pre, 1.0^git1~pre, 0)
+RPMVERCMP(1.0^git1, 1.0^git1~pre, 1)
+RPMVERCMP(1.0^git1~pre, 1.0^git1, -1)
+
 dnl These are included here to document current, arguably buggy behaviors
 dnl for reference purposes and for easy checking against  unintended
 dnl behavior changes.
-- 
2.23.0

